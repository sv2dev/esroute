{
  "version": 3,
  "sources": ["../src/nav-opts.ts", "../src/route-resolver.ts", "../src/route-spec.ts", "../src/router.ts", "routing.ts", "a.ts", "demo.ts"],
  "sourcesContent": ["export type PathOrHref = string | string[];\n\nexport interface NavMeta {\n  search?: string | Record<string, string>;\n  state?: any;\n  replace?: boolean;\n}\n\nexport class NavOpts {\n  readonly state: any;\n  readonly params: string[] = [];\n  readonly replace?: boolean;\n  private _path?: string[];\n  private _pathString?: string;\n  private _search?: Record<string, string>;\n  private _href?: string;\n  private _searchString?: string;\n\n  constructor(\n    pathOrHref: PathOrHref,\n    { replace, search, state }: NavMeta = {}\n  ) {\n    if (typeof pathOrHref === \"string\") {\n      if (!pathOrHref.startsWith(\"/\")) pathOrHref = `/${pathOrHref}`;\n      if (!search) this._href = pathOrHref;\n      const [pathString, searchString] = pathOrHref.split(\"?\");\n      this._pathString = pathString;\n      search ??= searchString;\n    } else this._path = pathOrHref;\n    if (typeof search === \"string\")\n      this._searchString = search.replace(/^\\?/, \"\");\n    else this._search = search ?? {};\n    if (state !== undefined) this.state = state;\n    if (replace !== undefined) this.replace = replace;\n  }\n\n  get path() {\n    return (this._path ??= this.pathString.split(\"/\").filter(Boolean));\n  }\n\n  get pathString() {\n    return (this._pathString ??= `/${this._path!.join(\"/\")}`);\n  }\n\n  get search() {\n    if (this._search) return this._search;\n    this._search = {} as Record<string, string>;\n    for (const part of this._searchString!.split(\"&\")) {\n      if (part) {\n        const [key, value] = part.split(\"=\");\n        this._search[key] = value ? decodeURIComponent(value) : \"\";\n      }\n    }\n    return this._search;\n  }\n\n  get searchString() {\n    if (this._searchString) return this._searchString;\n    return (this._searchString = Object.keys(this._search!)\n      .map((key) => {\n        const value = this._search![key];\n        return `${key}${value ? `=${encodeURIComponent(value)}` : \"\"}`;\n      })\n      .join(\"&\"));\n  }\n\n  get href() {\n    return (this._href ??= `${this.pathString}${\n      this.searchString ? `?${this.searchString}` : \"\"\n    }`);\n  }\n\n  get go() {\n    return (path: PathOrHref, opts: NavMeta = {}) =>\n      new NavOpts(path, {\n        search: opts.search,\n        state: opts.state,\n        replace: opts.replace ?? this.replace,\n      });\n  }\n\n  equals(o: NavOpts) {\n    return (\n      this.href === o.href &&\n      this.replace === o.replace &&\n      this.state === o.state &&\n      this.params.every((p, idx) => p === o.params[idx])\n    );\n  }\n\n  toString() {\n    return this.href;\n  }\n}\n", "import { NavOpts } from \"./nav-opts\";\nimport { Guard, Resolve, RouteSpec } from \"./route-spec\";\n\nexport interface Resolved<T> {\n  value: T;\n  opts: NavOpts;\n}\n\nexport type RouteResolver<T> = (\n  routes: RouteSpec<T>,\n  opts: NavOpts,\n  notFound: Resolve<T>\n) => Promise<Resolved<T>>;\n\nexport const defaultRouteResolver =\n  <T>(maxRedirects = 10): RouteResolver<T> =>\n  async (\n    routes: RouteSpec<T>,\n    opts: NavOpts,\n    notFound: Resolve<T>\n  ): Promise<Resolved<T>> => {\n    let value: NavOpts | T = opts;\n    const navPath = new Array<NavOpts>();\n    while (value instanceof NavOpts && navPath.length <= maxRedirects) {\n      opts = value;\n      const collision = navPath.find((o) => o.equals(opts));\n      if (collision)\n        throw new Error(\n          `Detected redirect loop: ${[...navPath, collision].join(\" -> \")}`\n        );\n      navPath.push(opts);\n      const resolve = await getRouteResolve(routes, opts);\n      value = await (resolve ?? notFound)(opts);\n    }\n\n    if (navPath.length > maxRedirects)\n      throw new Error(`Exceeded max redirects: ${navPath.join(\" -> \")}`);\n\n    return { value: value as T, opts };\n  };\n\nconst getRouteResolve = async <T>(\n  routes: RouteSpec<T>,\n  opts: NavOpts\n): Promise<Resolve<T> | null> => {\n  const route = await traverseRoutes(routes, opts);\n  return (\n    route &&\n    (typeof route === \"function\" ? route : (route[\"/\"] as Resolve<T>) ?? null)\n  );\n};\n\nconst traverseRoutes = async <T>(\n  routes: RouteSpec<T>,\n  opts: NavOpts\n): Promise<RouteSpec<T> | null> => {\n  let route: RouteSpec<T> | null = routes;\n  for (const part of opts.path) {\n    if (route === null || typeof route === \"function\") return null;\n    const child: RouteSpec<T> | null = getRouteChild(route, opts, part);\n    const guardResult = await (route[\"?\"] as Guard)?.(opts);\n    if (guardResult instanceof NavOpts) return () => guardResult;\n    route = child;\n  }\n  return route;\n};\n\nconst getRouteChild = <T>(\n  route: RouteSpec<T>,\n  opts: NavOpts,\n  part: string\n): RouteSpec<T> | null => {\n  if (part in route) return route[part as keyof RouteSpec<T>];\n  else if (\"*\" in route) {\n    opts.params.push(part);\n    return route[\"*\"];\n  }\n  return null;\n};\n", "import { NavOpts } from \"./nav-opts\";\n\nexport type Resolve<T> = (\n  navOpts: NavOpts\n) => T | NavOpts | Promise<T | NavOpts>;\n\nexport type GuardResult = void | boolean | NavOpts;\nexport type Guard = (route: NavOpts) => GuardResult | Promise<GuardResult>;\n\nexport type RouteSpec<T, X extends {} = any> =\n  | Resolve<T>\n  | {\n      [K in keyof X]: K extends \"/\"\n        ? Resolve<T>\n        : K extends \"?\"\n        ? Guard\n        : RouteSpec<T, X[K]>;\n    };\n\nexport const routeBuilder =\n  <T = any>() =>\n  <X extends {} = any>(spec: RouteSpec<T, X>): RouteSpec<T> =>\n    spec;\n\nexport const compileRoutes = <T, X extends {} = {}>(\n  spec: RouteSpec<T, X>\n): RouteSpec<T> => {\n  if (typeof spec !== \"object\") return spec;\n  const toSplit: Array<keyof X & string> = [];\n  for (const key in spec) {\n    if (key.length === 1 || !key.includes(\"/\")) compileRoutes(spec[key]);\n    else toSplit.push(key);\n  }\n  for (const key of toSplit) {\n    const path = key.split(\"/\");\n    let last: string | undefined;\n    while (!(last = path.pop()));\n    let sub: any = spec;\n    for (const p of path) {\n      if (!p) continue;\n      else if (p in sub && typeof sub[p] !== \"object\")\n        sub = sub[p] = { \"/\": sub[p] };\n      else if (!(p in sub)) sub = sub[p] = {};\n      else sub = sub[p];\n    }\n    if (last in sub)\n      if (typeof sub[last] === \"object\" && !(\"/\" in sub[last]))\n        sub[last] = { ...sub[last], \"/\": spec[key] };\n      else throw new Error(`Route conflict. Cannot add: ${key} to ${spec}.`);\n    else sub[last] = spec[key];\n    compileRoutes(sub[last]);\n    delete spec[key];\n  }\n  return spec;\n};\n\nexport const verifyRoutes = <T, X extends {}>(\n  spec: RouteSpec<T, X>,\n  _path: string[] = []\n) => {\n  if (\n    spec === null ||\n    spec === undefined ||\n    (typeof spec !== \"object\" && typeof spec !== \"function\")\n  )\n    throw new Error(\n      `Found invalid route definition '/${_path.join(\"/\")}': ${spec}`\n    );\n  if (typeof spec === \"object\")\n    for (const key in spec) {\n      if (key.length > 1 && key.includes(\"/\"))\n        throw new Error(\n          `Route '${key}', found in /${_path.join(\"/\")} is invalid.`\n        );\n      else verifyRoutes(spec[key]);\n    }\n  return spec;\n};\n", "import { NavMeta, NavOpts, PathOrHref } from \"./nav-opts\";\nimport {\n  defaultRouteResolver,\n  Resolved,\n  RouteResolver,\n} from \"./route-resolver\";\nimport { compileRoutes, Resolve, RouteSpec, verifyRoutes } from \"./route-spec\";\n\nexport type OnResolveListener<T> = (resolved: Resolved<T>) => void;\n\nexport interface RouterConf<T> {\n  /**\n   * A fallback resolve funuction to use, if a route could not be found.\n   * By default it redirects to the root path '/'.\n   */\n  notFound?: Resolve<T>;\n  /**\n   * Whether the click handler for anchor elements shall not be installed.\n   * This might make sense, if you want to take more control over how anchor\n   * clicks are handled.\n   * By default we check whether the anchor element's origin property is equal\n   * to the window.location.origin property. If so, the router will take over\n   * navigation and event.preventDefault() is called.\n   */\n  noClick?: boolean;\n  resolver: RouteResolver<T>;\n}\n\nexport class Router<T> {\n  resolution!: Promise<Resolved<T>>;\n  private _resolved?: Resolved<T>;\n  private _notFound: Resolve<T>;\n  private _resolver: RouteResolver<T>;\n  private _listeners = new Set<OnResolveListener<T>>();\n\n  constructor(\n    private routes: RouteSpec<T> = {},\n    { notFound = ({ go }) => go([]), noClick = false, resolver }: RouterConf<T>\n  ) {\n    this._resolver = resolver;\n    this._notFound = notFound;\n    this._initListeners(noClick);\n  }\n\n  go(opts: NavOpts): Promise<void>;\n  go(pathOrHref: PathOrHref, opts?: NavMeta): Promise<void>;\n  async go(target: PathOrHref | NavOpts, opts?: NavMeta): Promise<void> {\n    // Serialize all navigaton requests\n    await this.resolution;\n    const navigateOpts =\n      target instanceof NavOpts ? target : new NavOpts(target, opts);\n    const res = await this._applyResolution(this._resolve(navigateOpts));\n    this._updateState(res.opts);\n  }\n\n  onResolve(listener: OnResolveListener<T>) {\n    this._listeners.add(listener);\n    if (this._resolved) listener(this._resolved);\n    return () => this._listeners.delete(listener);\n  }\n\n  dispose() {\n    window.removeEventListener(\"popstate\", this._popStateListener);\n    document.removeEventListener(\"click\", this._linkClickListener);\n  }\n\n  private _initListeners(noClick: boolean) {\n    window.addEventListener(\"popstate\", this._popStateListener);\n    if (!noClick) document.addEventListener(\"click\", this._linkClickListener);\n    this._popStateListener({ state: history.state });\n  }\n\n  private _linkClickListener = (e: MouseEvent) => {\n    const target = isAnchorElement(e.target)\n      ? e.target\n      : e.composedPath?.().find(isAnchorElement);\n    if (target && target.origin === location.origin) {\n      this.go(target.pathname, { replace: \"replace\" in target.dataset });\n      e.preventDefault();\n    }\n  };\n\n  private _popStateListener = async ({ state }: { state: any }) => {\n    const { pathname, search } = window.location;\n    const initialOpts = new NavOpts(`${pathname}${search}`, { state: state });\n    const { opts } = await this._applyResolution(this._resolve(initialOpts));\n\n    if (opts !== initialOpts) {\n      this._updateState(\n        new NavOpts(opts.path, {\n          replace: true,\n          search: opts.search,\n          state: opts.state,\n        })\n      );\n    }\n  };\n\n  private async _applyResolution(resolution: Promise<Resolved<T>>) {\n    this.resolution = resolution;\n    this._resolved = await resolution;\n    this._listeners.forEach((l) => l(this._resolved!));\n    return resolution;\n  }\n\n  private _updateState({ state, replace, href }: NavOpts) {\n    const history = window.history;\n    const updateState = history[replace ? \"replaceState\" : \"pushState\"];\n    updateState.call(history, state, \"\", href);\n  }\n\n  private async _resolve(opts: NavOpts) {\n    return this._resolver(this.routes, opts, this._notFound);\n  }\n}\n\nconst isAnchorElement = (\n  target: EventTarget | null\n): target is HTMLAnchorElement => target instanceof HTMLAnchorElement;\n\nexport const defaultRouter = <T, X extends {} = any>(\n  routeSpec: RouteSpec<T, X>,\n  opts: Partial<RouterConf<T>> = {}\n) =>\n  new Router<T>(verifyRoutes(compileRoutes(routeSpec)), {\n    resolver: defaultRouteResolver(),\n    ...opts,\n  });\n", "import { routeBuilder } from \"../src\";\n\nexport const createRoutes = routeBuilder<string>();\n\nexport const load = (path: string) => fetch(path).then((res) => res.text());\n", "import { createRoutes, load } from \"./routing\";\n\nexport const aRoutes = createRoutes({\n  \"/\": () => load(\"routes/foo.html\"),\n});\n", "import { defaultRouter } from \"../src\";\nimport { aRoutes } from \"./a\";\nimport { createRoutes, load } from \"./routing\";\n\nconst myRoutes = createRoutes({\n  \"/\": (x) => {\n    console.log(x);\n    return load(\"routes/root.html\");\n  },\n  foo: () => load(\"routes/foo.html\"),\n  bar: () => load(\"routes/bar.html\"),\n  x: {\n    \"/\": () => \"abc\",\n    \"*\": ({ params: [param] }) => {\n      console.log(param);\n      return load(\"routes/foo.html\");\n    },\n  },\n  \"/x/y/*/*\": ({ params: [param1, param2] }) => {\n    console.log({ param1, param2 });\n    return load(\"routes/foo.html\");\n  },\n  a: aRoutes,\n});\n\nconst router = defaultRouter(myRoutes, {\n  notFound: ({ href, go }) => {\n    console.warn(\"Route not found\", href);\n    return go([]);\n  },\n});\n\nrouter.onResolve(({ value }) => render(value));\n\nconst render = (content: string) => (document.body.innerHTML = content);\n"],
  "mappings": "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",
  "names": []
}
